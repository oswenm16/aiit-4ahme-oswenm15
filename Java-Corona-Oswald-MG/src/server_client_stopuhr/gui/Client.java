/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server_client_stopuhr.gui;

import java.io.IOException;
import java.util.List;
import server_client_stopuhr.Request;
import server_client_stopuhr.Response;

/**
 *
 * @author maxos
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
        jbutConnect.setEnabled(true);
        jbutDisconnect.setEnabled(false);
        jbutClear.setEnabled(false);
        jbutStart.setEnabled(false);
        jbutStop.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jpanCenter = new javax.swing.JPanel();
        jlabCenter = new javax.swing.JLabel();
        jpanEast = new javax.swing.JPanel();
        jbutConnect = new javax.swing.JButton();
        jbutDisconnect = new javax.swing.JButton();
        jbutStart = new javax.swing.JButton();
        jbutStop = new javax.swing.JButton();
        jbutClear = new javax.swing.JButton();
        jbutEnd = new javax.swing.JButton();
        jpanNorth = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jpanCenter.setLayout(new java.awt.GridLayout(1, 0));

        jlabCenter.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jlabCenter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlabCenter.setText("0.000");
        jlabCenter.setToolTipText("");
        jlabCenter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jpanCenter.add(jlabCenter);

        add(jpanCenter, java.awt.BorderLayout.CENTER);

        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0};
        jPanel2Layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        jpanEast.setLayout(jPanel2Layout);

        jbutConnect.setText("Connect");
        jbutConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutConnectActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 40;
        jpanEast.add(jbutConnect, gridBagConstraints);

        jbutDisconnect.setText("Stop");
        jbutDisconnect.setEnabled(false);
        jbutDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutDisconnectActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jpanEast.add(jbutDisconnect, gridBagConstraints);

        jbutStart.setText("Disconnect");
        jbutStart.setEnabled(false);
        jbutStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutStartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 9;
        jpanEast.add(jbutStart, gridBagConstraints);

        jbutStop.setText("Start");
        jbutStop.setEnabled(false);
        jbutStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutStopActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jpanEast.add(jbutStop, gridBagConstraints);

        jbutClear.setText("Clear");
        jbutClear.setEnabled(false);
        jbutClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutClearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jpanEast.add(jbutClear, gridBagConstraints);

        jbutEnd.setText("End");
        jbutEnd.setEnabled(false);
        jbutEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutEndActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jpanEast.add(jbutEnd, gridBagConstraints);

        add(jpanEast, java.awt.BorderLayout.EAST);

        jpanNorth.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Refreshrate: 1s");
        jpanNorth.add(jLabel1, new java.awt.GridBagConstraints());

        jSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSlider.setFocusTraversalPolicyProvider(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.1;
        jpanNorth.add(jSlider, gridBagConstraints);

        jLabel2.setText("1ms");
        jpanNorth.add(jLabel2, new java.awt.GridBagConstraints());

        add(jpanNorth, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void jbutStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutStartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbutStartActionPerformed

    private void jbutConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutConnectActionPerformed

        System.out.println("Button pressed" + Thread.currentThread().getId());
        ConnectionWorker worker = new MyConnectionWorker(8080, "127.0.0.1");
        worker.execute();
    }//GEN-LAST:event_jbutConnectActionPerformed

    private void jbutDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutDisconnectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbutDisconnectActionPerformed

    private void jbutStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutStopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbutStopActionPerformed

    private void jbutClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbutClearActionPerformed

    private void jbutEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutEndActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbutEndActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSlider jSlider;
    private javax.swing.JButton jbutClear;
    private javax.swing.JButton jbutConnect;
    private javax.swing.JButton jbutDisconnect;
    private javax.swing.JButton jbutEnd;
    private javax.swing.JButton jbutStart;
    private javax.swing.JButton jbutStop;
    private javax.swing.JLabel jlabCenter;
    private javax.swing.JPanel jpanCenter;
    private javax.swing.JPanel jpanEast;
    private javax.swing.JPanel jpanNorth;
    // End of variables declaration//GEN-END:variables

    void handleResponse(Response r) {
    }

    private class MyConnectionWorker extends ConnectionWorker {

        public MyConnectionWorker(int port, String hostName) {
            super(port, hostName);
        }

        @Override
        protected void done() {

            try {
                String ergebnis = get();
                System.out.println(ergebnis + " " + Thread.currentThread().getId());
                jlabCenter.setText(ergebnis);
            } catch (Exception ex) {
                ex.printStackTrace();
            }

        }

        @Override
        protected void process(List<Integer> chunks) {
            for (int x : chunks) {
                System.out.println("Process " + x + " Thread " + Thread.currentThread().getId());
            }
        }

    }
}
